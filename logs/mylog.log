[2020-05-27T20:48:41.041Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting ReactiveMongodbExampleApplication on DESKTOP-9GB4E5J with PID 2776 (F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example\target\classes started by dell in F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example)
[2020-05-27T20:48:41.041Z]   --- [restartedMain] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-05-27T20:48:42.042Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-05-27T20:48:42.042Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2020-05-27T20:48:44.044Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [127] [INFO ] Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[2020-05-27T20:48:44.044Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [187] [INFO ] Finished Spring Data repository scanning in 431ms. Found 4 Reactive MongoDB repository interfaces.
[2020-05-27T20:48:47.047Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:48:48.048Z]   --- [cluster-ClusterId{value='5ece84d76bb6f7659669e741', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84d76bb6f7659669e741', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:1, serverValue:16}] to localhost:27017
[2020-05-27T20:48:48.048Z]   --- [cluster-ClusterId{value='5ece84d76bb6f7659669e741', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84d76bb6f7659669e741', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8450899}
[2020-05-27T20:48:48.048Z]   --- [restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-05-27T20:48:49.049Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:48:49.049Z]   --- [cluster-ClusterId{value='5ece84d96bb6f7659669e742', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84d96bb6f7659669e742', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:2, serverValue:17}] to localhost:27017
[2020-05-27T20:48:49.049Z]   --- [cluster-ClusterId{value='5ece84d96bb6f7659669e742', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84d96bb6f7659669e742', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21909899}
[2020-05-27T20:48:51.051Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:48:51.051Z]   --- [cluster-ClusterId{value='5ece84db6bb6f7659669e743', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84db6bb6f7659669e743', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:3, serverValue:18}] to localhost:27017
[2020-05-27T20:48:51.051Z]   --- [cluster-ClusterId{value='5ece84db6bb6f7659669e743', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84db6bb6f7659669e743', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3272100}
[2020-05-27T20:48:51.051Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:48:53.053Z]   --- [restartedMain] [org.springframework.boot.web.embedded.netty.NettyWebServer] [restartedMain] [96] [INFO ] Netty started on port(s): 8080
[2020-05-27T20:48:53.053Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ReactiveMongodbExampleApplication in 12.209 seconds (JVM running for 13.876)
[2020-05-27T20:48:53.053Z]   --- [cluster-ClusterId{value='5ece84db6bb6f7659669e744', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84db6bb6f7659669e744', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:4, serverValue:19}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [cluster-ClusterId{value='5ece84db6bb6f7659669e744', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece84db6bb6f7659669e744', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8067400}
[2020-05-27T20:48:53.053Z]   --- [Thread-9] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-9] [71] [INFO ] Opened connection [connectionId{localValue:6, serverValue:21}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:5, serverValue:20}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-15] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-15] [71] [INFO ] Opened connection [connectionId{localValue:7, serverValue:22}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-15] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-15] [71] [INFO ] Opened connection [connectionId{localValue:8, serverValue:23}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:10, serverValue:25}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-16] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-16] [71] [INFO ] Opened connection [connectionId{localValue:11, serverValue:26}] to localhost:27017
[2020-05-27T20:48:53.053Z]   --- [Thread-15] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-15] [71] [INFO ] Opened connection [connectionId{localValue:9, serverValue:24}] to localhost:27017
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:49:04.004Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@4ccd24f6)
[2020-05-27T20:49:05.005Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:49:05.005Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:49:05.005Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79fab7a5, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:9682]})
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@50290160)
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:49:05.005Z] [correlationId: 506bf42d-5040-4d3b-b74c-5e6942423c67] [ipAddress: /0:0:0:0:0:0:0:1:9682] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:52:58.058Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting ReactiveMongodbExampleApplication on DESKTOP-9GB4E5J with PID 8912 (F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example\target\classes started by dell in F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example)
[2020-05-27T20:52:58.058Z]   --- [restartedMain] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-05-27T20:52:58.058Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-05-27T20:52:58.058Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2020-05-27T20:53:00.000Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [127] [INFO ] Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[2020-05-27T20:53:00.000Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [187] [INFO ] Finished Spring Data repository scanning in 734ms. Found 4 Reactive MongoDB repository interfaces.
[2020-05-27T20:53:04.004Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:53:04.004Z]   --- [cluster-ClusterId{value='5ece85d89f96b67803ac9e11', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85d89f96b67803ac9e11', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:1, serverValue:27}] to localhost:27017
[2020-05-27T20:53:04.004Z]   --- [cluster-ClusterId{value='5ece85d89f96b67803ac9e11', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85d89f96b67803ac9e11', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8191901}
[2020-05-27T20:53:04.004Z]   --- [restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-05-27T20:53:05.005Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:53:05.005Z]   --- [cluster-ClusterId{value='5ece85d99f96b67803ac9e12', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85d99f96b67803ac9e12', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:2, serverValue:28}] to localhost:27017
[2020-05-27T20:53:05.005Z]   --- [cluster-ClusterId{value='5ece85d99f96b67803ac9e12', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85d99f96b67803ac9e12', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9560800}
[2020-05-27T20:53:07.007Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:53:07.007Z]   --- [cluster-ClusterId{value='5ece85db9f96b67803ac9e13', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85db9f96b67803ac9e13', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:3, serverValue:29}] to localhost:27017
[2020-05-27T20:53:07.007Z]   --- [cluster-ClusterId{value='5ece85db9f96b67803ac9e13', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85db9f96b67803ac9e13', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2356201}
[2020-05-27T20:53:07.007Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T20:53:09.009Z]   --- [restartedMain] [org.springframework.boot.web.embedded.netty.NettyWebServer] [restartedMain] [96] [INFO ] Netty started on port(s): 8080
[2020-05-27T20:53:09.009Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ReactiveMongodbExampleApplication in 12.4 seconds (JVM running for 14.052)
[2020-05-27T20:53:09.009Z]   --- [cluster-ClusterId{value='5ece85db9f96b67803ac9e14', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85db9f96b67803ac9e14', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:4, serverValue:30}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [cluster-ClusterId{value='5ece85db9f96b67803ac9e14', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece85db9f96b67803ac9e14', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6960000}
[2020-05-27T20:53:09.009Z]   --- [Thread-9] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-9] [71] [INFO ] Opened connection [connectionId{localValue:6, serverValue:32}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-8] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-8] [71] [INFO ] Opened connection [connectionId{localValue:5, serverValue:31}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:7, serverValue:33}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:8, serverValue:34}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:9, serverValue:35}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:11, serverValue:36}] to localhost:27017
[2020-05-27T20:53:09.009Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:10, serverValue:37}] to localhost:27017
[2020-05-27T20:53:10.010Z]   --- [Thread-17] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-17] [71] [INFO ] Opened connection [connectionId{localValue:12, serverValue:38}] to localhost:27017
[2020-05-27T20:53:10.010Z]   --- [Thread-7] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-7] [71] [INFO ] Opened connection [connectionId{localValue:13, serverValue:39}] to localhost:27017
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6ef0d26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@501896a3)
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.jwt.TokenProvider] [boundedElastic-1] [88] [INFO ] Expired JWT token.
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [org.springframework.core.log.CompositeLog] [boundedElastic-1] [122] [ERROR] [540c1901-1]  500 Server Error for HTTP GET "/api/tweets"
org.springframework.security.authentication.BadCredentialsException: Invalid token
	at com.example.reactive.mongodb.security.jwt.TokenProvider.getAuthentication(TokenProvider.java:63)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.AuthenticationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/api/tweets" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.reactive.mongodb.security.jwt.TokenProvider.getAuthentication(TokenProvider.java:63)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:107)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:192)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:160)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1756)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:320)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onNext(MonoCacheTime.java:337)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:192)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onNext(MonoSubscribeOn.java:144)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4218)
		at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:124)
		at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
		at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
		at java.util.concurrent.FutureTask.run(FutureTask.java:266)
		at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
		at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:748)
[2020-05-27T20:53:21.021Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@3e0dc339)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(1)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [21] [INFO ] List of Incoming Headers: [Content-Type:"application/json", User-Agent:"PostmanRuntime/7.25.0", Accept:"*/*", Cache-Control:"no-cache", Postman-Token:"dea9716a-0d10-44b2-8122-e890e206444a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Connection:"keep-alive", Content-Length:"54"]
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [22] [INFO ] Ip Address: /0:0:0:0:0:0:0:1:10005
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@14eb437f, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@539e0ffd)
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(1)
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [reactor-http-nio-3] [com.example.reactive.mongodb.security.jwt.JWTReactiveAuthenticationManager] [reactor-http-nio-3] [52] [INFO ] checking authentication for user user
[2020-05-27T20:53:44.044Z] [correlationId: 8538083f-e98c-41fd-9c24-18c67c316a7c] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [reactor-http-nio-3] [com.example.reactive.mongodb.security.jwt.JWTReactiveAuthenticationManager] [reactor-http-nio-3] [55] [INFO ] authenticated user user, setting security context
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@52f7ca96)
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [21] [INFO ] List of Incoming Headers: [Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyIiwiYXV0aCI6IlJPTEVfVVNFUiIsImV4cCI6MTU5MDU5MzMyNH0.Q0JdosWYX6aOXe6rg534HtCDifpnaAYmpCYacEH0zqI07y9If-C3v7pQ3HWghOhdNGjjIbTVBm4NM9OegX8UcQ", User-Agent:"PostmanRuntime/7.25.0", Accept:"*/*", Cache-Control:"no-cache", Postman-Token:"b6950387-b575-4a95-bea1-d40ae9642277", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Connection:"keep-alive"]
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [22] [INFO ] Ip Address: /0:0:0:0:0:0:0:1:10005
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@632aee26, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10005]})
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@5d7f657)
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T20:54:38.038Z] [correlationId: 09ae76ab-9877-425d-9772-ce794ca24fd0] [ipAddress: /0:0:0:0:0:0:0:1:10005] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T21:01:13.013Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting ReactiveMongodbExampleApplication on DESKTOP-9GB4E5J with PID 10776 (F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example\target\classes started by dell in F:\Study\GitHub_Projects\SpringBoot_Example\reactive-mongodb-example)
[2020-05-27T21:01:13.013Z]   --- [restartedMain] [org.springframework.boot.SpringApplication] [restartedMain] [651] [INFO ] No active profile set, falling back to default profiles: default
[2020-05-27T21:01:13.013Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2020-05-27T21:01:13.013Z]   --- [restartedMain] [org.springframework.boot.logging.DeferredLog] [restartedMain] [225] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2020-05-27T21:01:15.015Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [127] [INFO ] Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[2020-05-27T21:01:16.016Z]   --- [restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [187] [INFO ] Finished Spring Data repository scanning in 491ms. Found 4 Reactive MongoDB repository interfaces.
[2020-05-27T21:01:20.020Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T21:01:20.020Z]   --- [cluster-ClusterId{value='5ece87c8afe1455402ff14d7', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87c8afe1455402ff14d7', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:1, serverValue:40}] to localhost:27017
[2020-05-27T21:01:20.020Z]   --- [cluster-ClusterId{value='5ece87c8afe1455402ff14d7', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87c8afe1455402ff14d7', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8518200}
[2020-05-27T21:01:20.020Z]   --- [restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2020-05-27T21:01:21.021Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T21:01:21.021Z]   --- [cluster-ClusterId{value='5ece87c9afe1455402ff14d8', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87c9afe1455402ff14d8', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:2, serverValue:41}] to localhost:27017
[2020-05-27T21:01:21.021Z]   --- [cluster-ClusterId{value='5ece87c9afe1455402ff14d8', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87c9afe1455402ff14d8', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16699500}
[2020-05-27T21:01:23.023Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T21:01:23.023Z]   --- [cluster-ClusterId{value='5ece87cbafe1455402ff14d9', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87cbafe1455402ff14d9', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:3, serverValue:42}] to localhost:27017
[2020-05-27T21:01:23.023Z]   --- [cluster-ClusterId{value='5ece87cbafe1455402ff14d9', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87cbafe1455402ff14d9', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2381100}
[2020-05-27T21:01:23.023Z]   --- [restartedMain] [com.mongodb.diagnostics.logging.SLF4JLogger] [restartedMain] [71] [INFO ] Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[2020-05-27T21:01:25.025Z]   --- [restartedMain] [org.springframework.boot.web.embedded.netty.NettyWebServer] [restartedMain] [96] [INFO ] Netty started on port(s): 8080
[2020-05-27T21:01:25.025Z]   --- [restartedMain] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started ReactiveMongodbExampleApplication in 12.807 seconds (JVM running for 14.764)
[2020-05-27T21:01:25.025Z]   --- [cluster-ClusterId{value='5ece87cbafe1455402ff14da', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87cbafe1455402ff14da', description='null'}-localhost:27017] [71] [INFO ] Opened connection [connectionId{localValue:4, serverValue:43}] to localhost:27017
[2020-05-27T21:01:25.025Z]   --- [cluster-ClusterId{value='5ece87cbafe1455402ff14da', description='null'}-localhost:27017] [com.mongodb.diagnostics.logging.SLF4JLogger] [cluster-ClusterId{value='5ece87cbafe1455402ff14da', description='null'}-localhost:27017] [71] [INFO ] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 2]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8545300}
[2020-05-27T21:01:25.025Z]   --- [Thread-8] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-8] [71] [INFO ] Opened connection [connectionId{localValue:5, serverValue:44}] to localhost:27017
[2020-05-27T21:01:25.025Z]   --- [Thread-9] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-9] [71] [INFO ] Opened connection [connectionId{localValue:6, serverValue:45}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:7, serverValue:46}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:8, serverValue:47}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-9] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-9] [71] [INFO ] Opened connection [connectionId{localValue:9, serverValue:48}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:10, serverValue:49}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:12, serverValue:51}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-6] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-6] [71] [INFO ] Opened connection [connectionId{localValue:11, serverValue:50}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-7] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-7] [71] [INFO ] Opened connection [connectionId{localValue:14, serverValue:52}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-9] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-9] [71] [INFO ] Opened connection [connectionId{localValue:13, serverValue:53}] to localhost:27017
[2020-05-27T21:01:26.026Z]   --- [Thread-7] [com.mongodb.diagnostics.logging.SLF4JLogger] [Thread-7] [71] [INFO ] Opened connection [connectionId{localValue:15, serverValue:54}] to localhost:27017
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@6e7899f8, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@72c49500)
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.jwt.TokenProvider] [boundedElastic-1] [88] [INFO ] Expired JWT token.
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [org.springframework.core.log.CompositeLog] [boundedElastic-1] [122] [ERROR] [bbddce5e-1]  500 Server Error for HTTP GET "/api/tweets"
org.springframework.security.authentication.BadCredentialsException: Invalid token
	at com.example.reactive.mongodb.security.jwt.TokenProvider.getAuthentication(TokenProvider.java:63)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.AuthenticationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/api/tweets" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.reactive.mongodb.security.jwt.TokenProvider.getAuthentication(TokenProvider.java:63)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:107)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:107)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:192)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:241)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:230)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:112)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:127)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2317)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:162)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:184)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.request(FluxHide.java:142)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:81)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
		at com.example.reactive.mongodb.config.MdcContextLifter.onSubscribe(MdcContextLifter.java:24)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onSubscribe(FluxHide.java:113)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:100)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:160)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:136)
		at com.example.reactive.mongodb.config.MdcContextLifter.onComplete(MdcContextLifter.java:40)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1756)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:320)
		at reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onNext(MonoCacheTime.java:337)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:192)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onNext(MonoSubscribeOn.java:144)
		at com.example.reactive.mongodb.config.MdcContextLifter.onNext(MdcContextLifter.java:30)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1755)
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4218)
		at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:124)
		at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)
		at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)
		at java.util.concurrent.FutureTask.run(FutureTask.java:266)
		at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
		at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:748)
[2020-05-27T21:01:32.032Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@bd65a69)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(1)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [23] [INFO ] List of Incoming Headers: [Content-Type:"application/json", User-Agent:"PostmanRuntime/7.25.0", Accept:"*/*", Cache-Control:"no-cache", Postman-Token:"6c2e4e5e-bd94-4055-9b03-e48a118f7ab3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Connection:"keep-alive", Content-Length:"54"]
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [com.example.reactive.mongodb.security.CorrelationFilter] [boundedElastic-1] [24] [INFO ] Ip Address: /0:0:0:0:0:0:0:1:10636
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onSubscribe(FluxSwitchIfEmpty.SwitchIfEmptySubscriber)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(unbounded)
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z]   --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onContextUpdate(Context4{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@60bc83c6, interface org.springframework.security.core.context.SecurityContext=MonoLiftFuseable, correlationId=[correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d], ipAddress=[ipAddress: /0:0:0:0:0:0:0:1:10636]})
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onNext(org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult@4cc42d92)
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] request(1)
[2020-05-27T21:01:48.048Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [boundedElastic-1] [reactor.util.Loggers$Slf4JLogger] [boundedElastic-1] [274] [INFO ] onComplete()
[2020-05-27T21:01:49.049Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [reactor-http-nio-3] [com.example.reactive.mongodb.security.jwt.JWTReactiveAuthenticationManager] [reactor-http-nio-3] [52] [INFO ] checking authentication for user user
[2020-05-27T21:01:49.049Z] [correlationId: 4d2dc53a-75f0-4e10-a650-eae4f541014d] [ipAddress: /0:0:0:0:0:0:0:1:10636] --- [reactor-http-nio-3] [com.example.reactive.mongodb.security.jwt.JWTReactiveAuthenticationManager] [reactor-http-nio-3] [55] [INFO ] authenticated user user, setting security context
